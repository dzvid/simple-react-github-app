{"version":3,"sources":["services/api.js","components/Container/index.js","pages/Main/styles.js","pages/Main/index.js","pages/Repository/styles.js","pages/Repository/index.js","routes.js","styles/global.js","App.js","index.js"],"names":["api","axios","create","baseURL","Container","styled","div","Form","form","rotate","keyframes","SubmitButton","button","attrs","props","type","disabled","loading","css","List","ul","Main","handleSubmit","e","a","async","preventDefault","setState","state","newRepo","repositories","get","response","data","name","full_name","console","log","handleInputChange","target","value","localStorage","getItem","this","JSON","parse","_","prevState","setItem","stringify","onSubmit","placeholder","onChange","color","size","map","repository","key","to","encodeURIComponent","Component","Loading","Owner","header","IssueList","Repository","issues","match","repoName","decodeURIComponent","params","Promise","all","per_page","src","owner","avatar_url","alt","login","description","issue","String","id","user","href","html_url","title","labels","label","Routes","path","exact","component","createGlobalStyle","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1b01fd8.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.github.com',\n});\n\nexport default api;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  max-width: 700px;\n  background: #fff;\n  border-radius: 4px;\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\n  padding: 30px;\n  margin: 80px auto;\n\n  h1 {\n    font-size: 20px;\n\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    svg {\n      margin-right: 10px;\n    }\n  }\n`;\n\nexport default Container;\n","import styled, { keyframes, css } from 'styled-components';\n\nexport const Form = styled.form`\n  margin-top: 30px;\n  display: flex;\n  flex-direction: row;\n\n  input {\n    flex: 1;\n\n    padding: 10px 15px;\n    border: solid 1px #eee;\n    border-radius: 4px;\n    font-size: 16px;\n  }\n`;\n\n// Create button animation\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to{\n    transform: rotate(360deg);\n  }\n`;\n\nexport const SubmitButton = styled.button.attrs(props => ({\n  type: 'submit',\n  disabled: props.loading,\n}))`\n  background: #7159c1;\n  border: 0;\n  padding: 0 15px;\n  margin-left: 10px;\n  border-radius: 4px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  /* Style for when the button is disabled (during api get request) */\n  &[disabled] {\n    cursor: not-allowed;\n    opacity: 0.6;\n  }\n\n  ${props => props.loading\n    && css`\n      svg {\n        animation: ${rotate} 2s linear infinite;\n      }\n    `}\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  margin-top: 30px;\n\n  li {\n    padding: 15px 0;\n\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n\n    & + li {\n      border-top: 1px solid #eee;\n    }\n\n    a {\n      color: #7159c1;\n      text-decoration: none;\n    }\n  }\n`;\n","import React, { Component } from 'react';\nimport { FaGithubAlt, FaPlus, FaSpinner } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\n\nimport api from '../../services/api';\n\nimport Container from '../../components/Container';\nimport { Form, SubmitButton, List } from './styles';\n\nexport default class Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      newRepo: '',\n      repositories: [],\n      loading: false,\n    };\n  }\n\n  // Loads data saved in the localstorage\n  componentDidMount() {\n    const repositories = localStorage.getItem('repositories');\n\n    if (repositories) {\n      this.setState({ repositories: JSON.parse(repositories) });\n    }\n  }\n\n  // Saves the data in localstorage\n  componentDidUpdate(_, prevState) {\n    const { repositories } = this.state;\n    if (prevState.repositories !== repositories) {\n      localStorage.setItem('repositories', JSON.stringify(repositories));\n    }\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n\n    this.setState({ loading: true });\n\n    const { newRepo, repositories } = this.state;\n    const response = await api.get(`/repos/${newRepo}`);\n\n    const data = {\n      name: response.data.full_name,\n    };\n\n    this.setState({\n      repositories: [...repositories, data],\n      newRepo: '',\n      loading: false,\n    });\n\n    console.log(this.state.repositories);\n  };\n\n  handleInputChange = (e) => {\n    this.setState({ newRepo: e.target.value });\n  };\n\n  render() {\n    const { newRepo, loading, repositories } = this.state;\n\n    return (\n      <Container>\n        <h1>\n          <FaGithubAlt />\n          Repositórios\n        </h1>\n\n        <Form onSubmit={this.handleSubmit}>\n          <input\n            type=\"text\"\n            placeholder=\"Adicionar repositório\"\n            value={newRepo}\n            onChange={this.handleInputChange}\n          />\n\n          <SubmitButton loading={loading}>\n            {loading ? <FaSpinner color=\"#fff\" size={14} /> : <FaPlus color=\"#fff\" size={14} />}\n          </SubmitButton>\n        </Form>\n\n        <List>\n          {repositories.map((repository) => (\n            <li key={repository.name}>\n              <span>{repository.name}</span>\n              <Link to={`/repository/${encodeURIComponent(repository.name)}`}>Detalhes</Link>\n            </li>\n          ))}\n        </List>\n      </Container>\n    );\n  }\n}\n","import styled from 'styled-components';\n\nexport const Loading = styled.div`\n  color: #fff;\n  font-size: 30px;\n  font-weight: bold;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  height: 100vh;\n`;\n\nexport const Owner = styled.header`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  a {\n    color: #7159c1;\n    font-size: 16px;\n    text-decoration: none;\n\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n  }\n\n  svg {\n    margin-right: 10px;\n  }\n\n  img {\n    width: 120px;\n    border-radius: 50%;\n    margin-top: 20px;\n  }\n\n  h1 {\n    font-size: 24px;\n    margin-top: 10px;\n  }\n  p {\n    margin-top: 5px;\n    font-size: 14px;\n    color: #666;\n    line-height: 1.4;\n    text-align: center;\n    max-width: 400px;\n  }\n`;\n\nexport const IssueList = styled.ul`\n  padding-top: 30px;\n  margin-top: 30px;\n  border-top: 1px solid #eee;\n  list-style: none;\n\n  li {\n    padding: 15px 10px;\n    border: 1px solid #eee;\n    border-radius: 4px;\n\n    display: flex;\n\n    & + li {\n      margin-top: 10px;\n    }\n\n    img {\n      width: 36px;\n      height: 36px;\n      border-radius: 50%;\n      border: 2px solid #eee;\n    }\n\n    div {\n      flex: 1;\n\n      margin-left: 15px;\n\n      strong {\n        font-size: 16px;\n\n        a {\n          text-decoration: none;\n          color: #333;\n\n          &:hover {\n            color: #7159c1;\n          }\n        }\n\n        span {\n          background: #eee;\n          color: #333;\n          border-radius: 2px;\n          font-size: 12px;\n          font-weight: 600;\n          height: 20px;\n          padding: 3px 4px;\n          margin-left: 10px;\n        }\n      }\n      p {\n        margin-top: 5px;\n        font-size: 12px;\n        color: #999;\n      }\n    }\n  }\n`;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { FaArrowCircleLeft } from 'react-icons/fa';\nimport api from '../../services/api';\n\nimport Container from '../../components/Container';\nimport { Loading, Owner, IssueList } from './styles';\n\nexport default class Repository extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      repository: {},\n      issues: [],\n      loading: true,\n    };\n  }\n\n  async componentDidMount() {\n    const { match } = this.props;\n\n    const repoName = decodeURIComponent(match.params.repository);\n\n    const [repository, issues] = await Promise.all([\n      api.get(`/repos/${repoName}`),\n      api.get(`/repos/${repoName}/issues`, {\n        params: {\n          state: 'open',\n          per_page: 5,\n        },\n      }),\n    ]);\n\n    this.setState({\n      repository: repository.data,\n      issues: issues.data,\n      loading: false,\n    });\n  }\n\n  render() {\n    const { repository, issues, loading } = this.state;\n\n    if (loading) {\n      return <Loading>Carregando</Loading>;\n    }\n\n    return (\n      <Container>\n        <Owner>\n          <Link to=\"/\">\n            <FaArrowCircleLeft size={32} />\n            Voltar aos repositórios\n          </Link>\n          <img src={repository.owner.avatar_url} alt={repository.owner.login} />\n          <h1>{repository.name}</h1>\n          <p>{repository.description}</p>\n        </Owner>\n\n        <IssueList>\n          {issues.map((issue) => (\n            <li key={String(issue.id)}>\n              <img src={issue.user.avatar_url} alt={issue.user.login} />\n              <div>\n                <strong>\n                  <a href={issue.html_url}>{issue.title}</a>\n                  {issue.labels.map(label => (\n                    <span key={String(label.id)}>{label.name}</span>\n                  ))}\n                </strong>\n                <p>{issue.user.login}</p>\n              </div>\n            </li>\n          ))}\n        </IssueList>\n      </Container>\n    );\n  }\n}\n\nRepository.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      repository: PropTypes.string,\n    }),\n  }).isRequired,\n};\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport Main from './pages/Main';\nimport Repository from './pages/Repository';\n\nexport default function Routes() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/simple-react-github-app\" exact component={Main} />\n        <Route\n          path=\"/simple-react-github-app/repository/:repository\"\n          component={Repository}\n        />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n","import { createGlobalStyle } from \"styled-components\";\n\nexport default createGlobalStyle`\n  *{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n\n  html, body, #root{\n    min-height: 100%;\n  }\n\n  body{\n    background: #7159c1;\n    -webkit-font-smoothing: antialised !important;\n  }\n\n  body, input, button{\n    color: #222;\n    font-size: 14px;\n    font-family: Arial, Helvetica, sans-serif;\n  }\n\n  button{\n    cursor: pointer;\n  }\n `;\n","import React from \"react\";\n\nimport Routes from \"./routes\";\nimport GlobalStyle from \"./styles/global\";\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Routes />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}